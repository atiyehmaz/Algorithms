public class Solution {
    public int RomanToInt(string s) {
        
        char[] romanArray= s.ToCharArray();
        
        var intArray= new int[romanArray.Length];
        
        for(int i= 0; i < romanArray.Length; i++)
        {
            
            switch(romanArray[i])
            {
                case 'I': intArray[i]=1;
                    break;
                    
                 case 'V': intArray[i]=5;
                    break;
                    
                 case 'X': intArray[i]=10;
                    break;
                    
                 case 'L': intArray[i]=50;
                    break;
                    
                 case 'C': intArray[i]=100;
                    break;
                    
                 case 'D': intArray[i]=500;
                    break;
                    
                 case 'M': intArray[i]=1000;
                    break;
            }
        }
        
        var converted= new List<int>();
        
        for(int j = 0; j< intArray.Length; j++)
            {
               if(j == intArray.Length-1)
               {
                   converted.Add(intArray[j]);
                   break;
               }
           
                if( intArray[j]< intArray[j+1])
                {
                    int sum= intArray[j+1]- intArray[j];
                    converted.Add(sum);
                    j ++;
                }
                else
                {
                    converted.Add(intArray[j]);
                }
            }
         
        int number= 0;
        
        foreach(var item in converted)
        {
            number+= item;
        }
        return number;
    }
}
