/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
        
       ListNode dummy= new ListNode(-1);
       ListNode head= dummy;
        
        if(l1==null) return l2;
        if(l2==null) return l1;
        
        while( l1 != null || l2 != null)
        {
            
            if((l1 != null && l2 == null) || ( l1!=null && l2!=null && l1.val< l2.val) )
            {
                
                ListNode current= new ListNode(l1.val);
                head.next = current;
                l1= l1.next;
            }
            
            else
            {
                ListNode current= new ListNode(l2.val);
                head.next = current;
                l2= l2.next;
            }
            
            head= head.next;
        }
        
        return dummy.next;
 }
}

